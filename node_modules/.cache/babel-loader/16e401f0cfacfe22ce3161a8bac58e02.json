{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adon\\\\Desktop\\\\full stack dev\\\\COVID-LIVE-master\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport { MenuItem, FormControl, Select, Card, CardContent } from \"@material-ui/core\";\nimport { sortData, prettyPrintStat } from \"./util\";\nimport InfoBox from './InfoBox';\nimport Map from './Map';\nimport Table from './Table';\nimport LineGraph from './LineGraph';\nimport Twitter from './Twitter';\nimport Footer from './Footer';\nimport './App.css';\nimport \"leaflet/dist/leaflet.css\";\nimport numeral from \"numeral\";\nimport { Circle, Popup } from 'react-leaflet'; //https://disease.sh/v3/covid-19/bangladesh\n\nfunction App() {\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState(\"worldWide\");\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState([]);\n  const [mapCenter, setMapCenter] = useState({\n    lat: 20.5937,\n    lng: 78.9629\n  });\n  const [mapZoom, setMapZoom] = useState(3);\n  const [mapCountries, setMapCountries] = useState([]);\n  const [casesType, setCasesType] = useState(\"cases\");\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\").then(response => response.json()).then(data => {\n      setCountryInfo(data);\n    });\n  }, []);\n  useEffect(() => {\n    const getCountriesData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\").then(response => response.json()).then(data => {\n        const countries = data.map(country => ({\n          name: country.country,\n          value: country.countryInfo.iso2\n        }));\n        const sortedData = sortData(data);\n        setTableData(sortedData);\n        setMapCountries(data);\n        setCountries(countries);\n      });\n    };\n\n    getCountriesData();\n  }, []);\n\n  const onCountryChange = async event => {\n    const countryCode = event.target.value;\n    const url = countryCode === \"worldWide\" ? 'https://disease.sh/v3/covid-19/all' : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n    await fetch(url).then(response => response.json()).then(data => {\n      setCountry(countryCode);\n      setCountryInfo(data);\n      setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n    });\n    await fetch('https://disease.sh/v3/covid-19/countries/BANGLADESH').then(response => response.json()).then(data => console.log(data));\n  };\n\n  console.log(countryInfo);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app_left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app_header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, \"COVID-19 LIVE\"), /*#__PURE__*/React.createElement(FormControl, {\n    className: \"app__dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    variant: \"outlined\",\n    onChange: onCountryChange,\n    value: country,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"worldWide\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }, \"WorldWide\"), countries.map(country => /*#__PURE__*/React.createElement(MenuItem, {\n    value: country.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, country.name))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app__stats\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InfoBox, {\n    isRed: true,\n    active: casesType === \"cases\",\n    onClick: e => setCasesType(\"cases\"),\n    title: \"Cases\",\n    cases: prettyPrintStat(countryInfo.todayCases),\n    total: prettyPrintStat(countryInfo.cases),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(InfoBox, {\n    title: \"Recovered\",\n    active: casesType === \"recovered\",\n    onClick: e => setCasesType(\"recovered\"),\n    cases: prettyPrintStat(countryInfo.todayRecovered),\n    total: prettyPrintStat(countryInfo.recovered),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(InfoBox, {\n    isRed: true,\n    active: casesType === \"deaths\",\n    onClick: e => setCasesType(\"deaths\"),\n    title: \"Deaths\",\n    cases: prettyPrintStat(countryInfo.todayDeaths),\n    total: prettyPrintStat(countryInfo.deaths),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Map, {\n    casesType: casesType,\n    countries: mapCountries,\n    center: mapCenter,\n    zoom: mapZoom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app__right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, \"Live cases by Country\"), /*#__PURE__*/React.createElement(Table, {\n    countries: tableData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"app__graphTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, \"Worldwide new \", casesType), /*#__PURE__*/React.createElement(LineGraph, {\n    className: \"app__graph\",\n    casesType: casesType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Adon/Desktop/full stack dev/COVID-LIVE-master/src/App.js"],"names":["React","useState","useEffect","MenuItem","FormControl","Select","Card","CardContent","sortData","prettyPrintStat","InfoBox","Map","Table","LineGraph","Twitter","Footer","numeral","Circle","Popup","App","countries","setCountries","country","setCountry","countryInfo","setCountryInfo","tableData","setTableData","mapCenter","setMapCenter","lat","lng","mapZoom","setMapZoom","mapCountries","setMapCountries","casesType","setCasesType","fetch","then","response","json","data","getCountriesData","map","name","value","iso2","sortedData","onCountryChange","event","countryCode","target","url","long","console","log","e","todayCases","cases","todayRecovered","recovered","todayDeaths","deaths"],"mappings":"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","sourcesContent":["import React,{useState, useEffect} from 'react';\nimport{\n  MenuItem,\n  FormControl,\n  Select,\n  Card,\n  CardContent\n} from \"@material-ui/core\";\nimport { sortData, prettyPrintStat } from \"./util\";\nimport InfoBox from './InfoBox';\nimport Map from './Map';\nimport Table from './Table'\nimport LineGraph from './LineGraph'\nimport Twitter from './Twitter';\nimport Footer from './Footer';\nimport './App.css';\nimport \"leaflet/dist/leaflet.css\";\nimport numeral from \"numeral\";\nimport {Circle,Popup} from 'react-leaflet';\n\n\n//https://disease.sh/v3/covid-19/bangladesh\n\nfunction App() {\n  const [countries,setCountries]=useState([]);\n  const [country,setCountry]=useState(\"worldWide\");\n  const [countryInfo,setCountryInfo]=useState({\n  });\n  const [tableData,setTableData] =useState([]);\n  const [mapCenter, setMapCenter] = useState({ lat: 20.5937, lng: 78.9629 });\n  const [mapZoom, setMapZoom] = useState(3);\n  const [mapCountries, setMapCountries] = useState([]);\n  const [casesType, setCasesType] = useState(\"cases\");\n  useEffect(()=>{\n  fetch(\"https://disease.sh/v3/covid-19/all\")\n  .then(response=>response.json())\n  .then(data=>{\n    setCountryInfo(data);\n  })\n  },[])\n\nuseEffect(()=>{\nconst getCountriesData=async()=>{\nawait fetch (\"https://disease.sh/v3/covid-19/countries\")\n.then((response)=>response.json())\n.then((data)=>{\n  const countries=data.map((country)=>(\n    {\n      name:country.country,\n      value:country.countryInfo.iso2\n    }\n  ));\n\n  const sortedData=sortData(data)\n  setTableData(sortedData);\n  setMapCountries(data);\n  setCountries(countries);\n})\n}\ngetCountriesData();\n},[]);\n\nconst onCountryChange =async (event) => {\n  const countryCode=event.target.value;\n \nconst url=\ncountryCode ===\"worldWide\" ? \n'https://disease.sh/v3/covid-19/all' \n:`https://disease.sh/v3/covid-19/countries/${countryCode}`\n\nawait fetch(url)\n.then(response=>response.json())\n.then(data=>{\n  setCountry(countryCode);\n  setCountryInfo(data)\n\n  setMapCenter([data.countryInfo.lat,data.countryInfo.long])\n})\n\nawait fetch ('https://disease.sh/v3/covid-19/countries/BANGLADESH')\n.then(response=>response.json())\n.then(data=> console.log(data));\n\n};\n\nconsole.log(countryInfo);\n  return (\n    <div className=\"app\">\n      <div className=\"app_left\">\n        <div className=\"app_header\">\n          <h1>COVID-19 LIVE</h1>\n          <FormControl className=\"app__dropdown\">\n            <Select\n              variant=\"outlined\"\n              onChange={onCountryChange}\n              value={country}\n            >\n              <MenuItem value=\"worldWide\">WorldWide</MenuItem>\n              {countries.map((country) => (\n                <MenuItem value={country.value}>{country.name}</MenuItem>\n              ))}\n\n              {/* <MenuItem value=\"worldWide\">WorldWide</MenuItem>\n    <MenuItem value=\"worldWide\">option 2</MenuItem>\n    <MenuItem value=\"worldWide\">option 3</MenuItem>\n  <MenuItem value=\"worldWide\">yo id no</MenuItem> */}\n            </Select>\n          </FormControl>\n        </div>\n        <div className=\"app__stats\">\n          <InfoBox\n            isRed\n            active={casesType === \"cases\"}\n            onClick={(e) => setCasesType(\"cases\")}\n            title=\"Cases\"\n            cases={prettyPrintStat(countryInfo.todayCases)}\n            total={prettyPrintStat(countryInfo.cases)}\n          />\n          <InfoBox\n            title=\"Recovered\"\n            active={casesType === \"recovered\"}\n            onClick={(e) => setCasesType(\"recovered\")}\n            cases={prettyPrintStat(countryInfo.todayRecovered)}\n            total={prettyPrintStat(countryInfo.recovered)}\n          />\n          <InfoBox\n            isRed\n            active={casesType === \"deaths\"}\n            onClick={(e) => setCasesType(\"deaths\")}\n            title=\"Deaths\"\n            cases={prettyPrintStat(countryInfo.todayDeaths)}\n            total={prettyPrintStat(countryInfo.deaths)}\n          />\n        </div>\n        <Map\n          casesType={casesType}\n          countries={mapCountries}\n          center={mapCenter}\n          zoom={mapZoom}\n        />\n      </div>\n\n      <div className=\"app__right\">\n        <Card>\n          <CardContent>\n            <h3>Live cases by Country</h3>\n            <Table countries={tableData} />\n            {/* <h3>Worldwide new {casesType}</h3>\n<LineGraph */}\n            <h3 className=\"app__graphTitle\">Worldwide new {casesType}</h3>\n            <LineGraph className=\"app__graph\" casesType={casesType} />\n          </CardContent>\n        </Card>\n\n        <Footer />\n      </div>\n    </div>\n  );\n  \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}