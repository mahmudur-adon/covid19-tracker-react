{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\Adon\\\\Desktop\\\\full stack dev\\\\COVID-LIVE-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import React from'react';import numeral from\"numeral\";import{Circle,Popup}from'react-leaflet';var casesTypeColors={cases:{hex:\"#a820df\",rgb:\"rgb(169, 32, 223)\",half_op:\"rgb(169, 32, 223,0.5)\",multiplier:800},recovered:{hex:\"#7dd71d\",rgb:\"rgba(125,215,29)\",half_op:\"rgba(125,215,29,0.5)\",multiplier:1200},deaths:{hex:\"##FF0000\",rgb:\"rgba(255,0,0)\",half_op:\"rgba(251,68,67,0.5)\",multiplier:2000}};export var prettyPrintStat=function prettyPrintStat(stat){return stat?\"\".concat(numeral(stat).format(\"0.0a\")):\"+0\";};export var sortData=function sortData(data){var sortedData=_toConsumableArray(data);sortedData.sort(function(a,b){if(a.cases>b.cases){return-1;}else{return 1;}});return sortedData;};export var showDataOnMap=function showDataOnMap(data){var casesType=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'cases';return data.map(function(country){return/*#__PURE__*/React.createElement(Circle,{center:[country.countryInfo.lat,country.countryInfo.long],fillOpacity:0.4,color:casesTypeColors[casesType].hex,fillColor:casesTypeColors[casesType].hex,radius:Math.sqrt(country[casesType])*casesTypeColors[casesType].multiplier},/*#__PURE__*/React.createElement(Popup,null,/*#__PURE__*/React.createElement(\"div\",{className:\"info-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"info-flag\",style:{backgroundImage:\"url(\".concat(country.countryInfo.flag,\")\")}}),/*#__PURE__*/React.createElement(\"div\",{className:\"info-name\"},country.country),/*#__PURE__*/React.createElement(\"div\",{className:\"info-confirmed\"},\"Cases:\",numeral(country.cases).format(\"0,0\")),/*#__PURE__*/React.createElement(\"div\",{className:\"info-recovered\"},\"Recovered:\",numeral(country.recovered).format(\"0,0\"),\" \"),/*#__PURE__*/React.createElement(\"div\",{className:\"info-deaths\"},\"Deaths: \",numeral(country.deaths).format(\"0,0\")))));});};","map":{"version":3,"sources":["C:/Users/Adon/Desktop/full stack dev/COVID-LIVE-master/src/util.js"],"names":["React","numeral","Circle","Popup","casesTypeColors","cases","hex","rgb","half_op","multiplier","recovered","deaths","prettyPrintStat","stat","format","sortData","data","sortedData","sort","a","b","showDataOnMap","casesType","map","country","countryInfo","lat","long","Math","sqrt","backgroundImage","flag"],"mappings":"+LAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,OAAP,KAAoB,SAApB,CACA,OAAQC,MAAR,CAAeC,KAAf,KAA2B,eAA3B,CAGA,GAAMC,CAAAA,eAAe,CAAG,CACtBC,KAAK,CAAE,CACLC,GAAG,CAAE,SADA,CAELC,GAAG,CAAE,mBAFA,CAGLC,OAAO,CAAE,uBAHJ,CAILC,UAAU,CAAE,GAJP,CADe,CAOtBC,SAAS,CAAE,CACTJ,GAAG,CAAE,SADI,CAETC,GAAG,CAAE,kBAFI,CAGTC,OAAO,CAAE,sBAHA,CAITC,UAAU,CAAE,IAJH,CAPW,CAatBE,MAAM,CAAE,CACNL,GAAG,CAAE,UADC,CAENC,GAAG,CAAE,eAFC,CAGNC,OAAO,CAAE,qBAHH,CAINC,UAAU,CAAE,IAJN,CAbc,CAAxB,CAoBA,MAAO,IAAMG,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,IAAD,QAC7BA,CAAAA,IAAI,WAAMZ,OAAO,CAACY,IAAD,CAAP,CAAcC,MAAd,CAAqB,MAArB,CAAN,EAAuC,IADd,EAAxB,CAGP,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,IAAD,CAAQ,CAC5B,GAAMC,CAAAA,UAAU,oBAAKD,IAAL,CAAhB,CACAC,UAAU,CAACC,IAAX,CAAgB,SAACC,CAAD,CAAGC,CAAH,CAAO,CACnB,GAAGD,CAAC,CAACd,KAAF,CAAQe,CAAC,CAACf,KAAb,CAAmB,CACf,MAAO,CAAC,CAAR,CACH,CAFD,IAGI,CACA,MAAO,EAAP,CACH,CACJ,CAPD,EAQA,MAAOY,CAAAA,UAAP,CACH,CAXM,CAaP,MAAO,IAAMI,CAAAA,aAAa,CAAC,QAAdA,CAAAA,aAAc,CAACL,IAAD,KAAMM,CAAAA,SAAN,2DAAgB,OAAhB,OAC3BN,CAAAA,IAAI,CAACO,GAAL,CAAS,SAAAC,OAAO,qBAChB,oBAAC,MAAD,EACM,MAAM,CAAE,CAACA,OAAO,CAACC,WAAR,CAAoBC,GAArB,CAA0BF,OAAO,CAACC,WAAR,CAAoBE,IAA9C,CADd,CAEM,WAAW,CAAE,GAFnB,CAGM,KAAK,CAAEvB,eAAe,CAACkB,SAAD,CAAf,CAA2BhB,GAHxC,CAIM,SAAS,CAAEF,eAAe,CAACkB,SAAD,CAAf,CAA2BhB,GAJ5C,CAKM,MAAM,CACJsB,IAAI,CAACC,IAAL,CAAUL,OAAO,CAACF,SAAD,CAAjB,EAAgClB,eAAe,CAACkB,SAAD,CAAf,CAA2Bb,UANnE,eAUA,oBAAC,KAAD,mBACQ,2BAAK,SAAS,CAAC,gBAAf,eACE,2BACE,SAAS,CAAC,WADZ,CAEE,KAAK,CAAE,CAAEqB,eAAe,eAASN,OAAO,CAACC,WAAR,CAAoBM,IAA7B,KAAjB,CAFT,EADF,cAKE,2BAAK,SAAS,CAAC,WAAf,EAA4BP,OAAO,CAACA,OAApC,CALF,cAME,2BAAK,SAAS,CAAC,gBAAf,WACSvB,OAAO,CAACuB,OAAO,CAACnB,KAAT,CAAP,CAAuBS,MAAvB,CAA8B,KAA9B,CADT,CANF,cASE,2BAAK,SAAS,CAAC,gBAAf,eACab,OAAO,CAACuB,OAAO,CAACd,SAAT,CAAP,CAA2BI,MAA3B,CAAkC,KAAlC,CADb,CACuD,GADvD,CATF,cAYE,2BAAK,SAAS,CAAC,aAAf,aACWb,OAAO,CAACuB,OAAO,CAACb,MAAT,CAAP,CAAwBG,MAAxB,CAA+B,KAA/B,CADX,CAZF,CADR,CAVA,CADgB,EAAhB,CAD2B,EAApB","sourcesContent":["import React from 'react';\nimport numeral from \"numeral\";\nimport {Circle,Popup} from 'react-leaflet';\n\n\nconst casesTypeColors = {\n  cases: {\n    hex: \"#a820df\",\n    rgb: \"rgb(169, 32, 223)\",\n    half_op: \"rgb(169, 32, 223,0.5)\",\n    multiplier: 800,\n  },\n  recovered: {\n    hex: \"#7dd71d\",\n    rgb: \"rgba(125,215,29)\",\n    half_op: \"rgba(125,215,29,0.5)\",\n    multiplier: 1200,\n  },\n  deaths: {\n    hex: \"##FF0000\",\n    rgb: \"rgba(255,0,0)\",\n    half_op: \"rgba(251,68,67,0.5)\",\n    multiplier: 2000,\n  },\n};\nexport const prettyPrintStat = (stat) =>\n  stat ? `${numeral(stat).format(\"0.0a\")}` : \"+0\";\n  \nexport const sortData = (data)=>{\n    const sortedData=[...data];\n    sortedData.sort((a,b)=>{\n        if(a.cases>b.cases){\n            return -1;\n        }\n        else{\n            return 1;\n        }\n    })\n    return sortedData;\n}\n\nexport const showDataOnMap=(data,casesType='cases')=>(\ndata.map(country=>(\n<Circle\n      center={[country.countryInfo.lat, country.countryInfo.long]}\n      fillOpacity={0.4}\n      color={casesTypeColors[casesType].hex}\n      fillColor={casesTypeColors[casesType].hex}\n      radius={\n        Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier\n      }\n    >\n\n<Popup>\n        <div className='info-container'>\n          <div\n            className='info-flag'\n            style={{ backgroundImage: `url(${country.countryInfo.flag})` }}\n          />\n          <div className='info-name'>{country.country}</div>\n          <div className='info-confirmed'>\n            Cases:{numeral(country.cases).format(\"0,0\")}\n          </div>\n          <div className='info-recovered'>\n            Recovered:{numeral(country.recovered).format(\"0,0\")}{\" \"}\n          </div>\n          <div className='info-deaths'>\n            Deaths: {numeral(country.deaths).format(\"0,0\")}\n          </div>\n        </div>\n      </Popup>\n\n\n    </Circle>\n))\n);\n"]},"metadata":{},"sourceType":"module"}